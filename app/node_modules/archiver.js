'use strict';

var zlib = require('zlib');
var snappy = require('snappy');
var lz4 = require('lz4');

var compSnappy = exports.compSnappy = function(data, callback){
    var buff = new Buffer(data);
    snappy.compress(buff, function(err, res){
        if(err){
            callback(err, null);
            return;
        }
        callback(null, res);
    });
};
var decompSnappy = exports.decompSnappy = function(data, callback){
    var buff = new Buffer(data);
    snappy.uncompress(buff, function(err, res){
        if(err){
            callback(err, null);
            return;
        }
        callback(null, res);
    });
};
var compLz4 = exports.compLz4 = function(str, callback){
    var inp = new Buffer(str);
    var size = inp.length;
    var out = new Buffer(lz4.encodeBound(size));
    var comp_size = lz4.encodeBlock(inp, out);
    out = out.slice(0, comp_size);
    callback(null, out);
};
var decompLz4 = exports.decompLz4 = function(data, original_size, callback){
    var out = new Buffer(original_size);
    var decomp_size = lz4.decodeBlock(data, out);
    out = out.slice(0, decomp_size);
    callback(null, out);
};

var compZlib = exports.compZlib = function(data, callback){
    zlib.deflate(data, function(err, res){
        if(err){
            callback(err, null);
            return;
        }
        callback(null, res);
    });
};
var decompZlib = exports.decompZlib = function(data, callback){
    zlib.inflate(data, function(err, res){
        if(err){
            callback(err, null);
            return;
        }
        callback(null, res);
    });
};

